[0.000000] (-) TimerEvent: {}
[0.000992] (ydlidar_ros2_driver) JobQueued: {'identifier': 'ydlidar_ros2_driver', 'dependencies': OrderedDict()}
[0.001319] (ydlidar_sdk) JobQueued: {'identifier': 'ydlidar_sdk', 'dependencies': OrderedDict()}
[0.002011] (ydlidar_ros2_driver) JobStarted: {'identifier': 'ydlidar_ros2_driver'}
[0.099191] (-) TimerEvent: {}
[0.200580] (-) TimerEvent: {}
[0.302174] (-) TimerEvent: {}
[0.403962] (-) TimerEvent: {}
[0.505395] (-) TimerEvent: {}
[0.555240] (ydlidar_sdk) JobStarted: {'identifier': 'ydlidar_sdk'}
[0.606187] (-) TimerEvent: {}
[0.707233] (-) TimerEvent: {}
[0.809387] (-) TimerEvent: {}
[0.910941] (-) TimerEvent: {}
[1.012232] (-) TimerEvent: {}
[1.113585] (-) TimerEvent: {}
[1.132080] (ydlidar_ros2_driver) JobProgress: {'identifier': 'ydlidar_ros2_driver', 'progress': 'cmake'}
[1.133231] (ydlidar_ros2_driver) Command: {'cmd': ['/usr/bin/cmake', '/home/ubuntu/robot_ws/src/ydlidar_ros2_driver', '-DCMAKE_INSTALL_PREFIX=/home/ubuntu/robot_ws/install/ydlidar_ros2_driver'], 'cwd': '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ubuntu'), ('SSH_AGENT_PID', '1914'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ubuntu'), ('OLDPWD', '/home/ubuntu'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1648'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ubuntu'), ('JOURNAL_STREAM', '9:37231'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ubuntu'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu:@/tmp/.ICE-unix/2263,unix/ubuntu:/tmp/.ICE-unix/2263'), ('INVOCATION_ID', '07c1802c0aa34cad91a341208710bc27'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/14b98bcc_90b3_485a_badd_f52529966b93'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.76'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[1.166802] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'cmake'}
[1.168108] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '/home/ubuntu/robot_ws/src/YDLidar-SDK', '-DCMAKE_INSTALL_PREFIX=/home/ubuntu/robot_ws/install/ydlidar_sdk'], 'cwd': '/home/ubuntu/robot_ws/build/ydlidar_sdk', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ubuntu'), ('SSH_AGENT_PID', '1914'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ubuntu'), ('OLDPWD', '/home/ubuntu'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1648'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ubuntu'), ('JOURNAL_STREAM', '9:37231'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ubuntu'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu:@/tmp/.ICE-unix/2263,unix/ubuntu:/tmp/.ICE-unix/2263'), ('INVOCATION_ID', '07c1802c0aa34cad91a341208710bc27'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/14b98bcc_90b3_485a_badd_f52529966b93'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.76'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ubuntu/robot_ws/build/ydlidar_sdk'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003')]), 'shell': False}
[1.213916] (-) TimerEvent: {}
[1.315280] (-) TimerEvent: {}
[1.416665] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[1.417913] (-) TimerEvent: {}
[1.470063] (ydlidar_sdk) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[1.518376] (-) TimerEvent: {}
[1.619861] (-) TimerEvent: {}
[1.665985] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[1.684203] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[1.720073] (-) TimerEvent: {}
[1.747411] (ydlidar_sdk) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[1.775720] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[1.820526] (-) TimerEvent: {}
[1.922161] (-) TimerEvent: {}
[2.018582] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[2.022190] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[2.022861] (-) TimerEvent: {}
[2.105730] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[2.109093] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[2.123124] (-) TimerEvent: {}
[2.224064] (-) TimerEvent: {}
[2.325298] (-) TimerEvent: {}
[2.427185] (-) TimerEvent: {}
[2.522675] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[2.527362] (-) TimerEvent: {}
[2.563292] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[2.565574] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[2.577467] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[2.623385] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[2.627545] (-) TimerEvent: {}
[2.676675] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[2.678511] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[2.693637] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[2.727774] (-) TimerEvent: {}
[2.828849] (-) TimerEvent: {}
[2.929163] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[2.929752] (-) TimerEvent: {}
[2.933045] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[3.029988] (-) TimerEvent: {}
[3.051093] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[3.055608] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[3.130222] (-) TimerEvent: {}
[3.231288] (-) TimerEvent: {}
[3.297154] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[3.331647] (-) TimerEvent: {}
[3.335343] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[3.337348] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[3.391751] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found ament_cmake: 0.9.12 (/opt/ros/foxy/share/ament_cmake/cmake)\n'}
[3.417266] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[3.431798] (-) TimerEvent: {}
[3.467848] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[3.471696] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[3.477227] (ydlidar_sdk) StdoutLine: {'line': b'-- Current platform: Linux\n'}
[3.482425] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at CMakeLists.txt:50 (cmake_policy):\n'}
[3.483260] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0053 will be removed from a future version\n'}
[3.483833] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[3.484506] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.485018] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[3.485519] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[3.485981] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[3.486802] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[3.487306] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.487751] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.488201] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at CMakeLists.txt:53 (cmake_policy):\n'}
[3.488632] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0037 will be removed from a future version\n'}
[3.488969] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[3.489300] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.489594] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[3.489899] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[3.490167] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[3.490477] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[3.490742] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.491018] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.491277] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at CMakeLists.txt:56 (cmake_policy):\n'}
[3.491532] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0043 will be removed from a future version\n'}
[3.491784] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[3.492031] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.492392] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[3.492722] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[3.493068] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[3.493423] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[3.493793] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.494113] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[3.494449] (ydlidar_sdk) StdoutLine: {'line': b'-- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) \n'}
[3.532009] (-) TimerEvent: {}
[3.546665] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") \n'}
[3.547328] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[3.608057] (ydlidar_sdk) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3.8 (found version "3.8.10") \n'}
[3.632278] (-) TimerEvent: {}
[3.702020] (ydlidar_sdk) StdoutLine: {'line': b'-- Found PythonLibs: /usr/lib/aarch64-linux-gnu/libpython3.8.so (found version "3.8.10") \n'}
[3.732401] (-) TimerEvent: {}
[3.833210] (-) TimerEvent: {}
[3.933436] (ydlidar_sdk) StdoutLine: {'line': b'-- Found GTest: /usr/lib/aarch64-linux-gnu/libgtest.a  \n'}
[3.934081] (-) TimerEvent: {}
[4.034811] (-) TimerEvent: {}
[4.135649] (-) TimerEvent: {}
[4.236493] (-) TimerEvent: {}
[4.337487] (-) TimerEvent: {}
[4.438234] (-) TimerEvent: {}
[4.539179] (-) TimerEvent: {}
[4.640258] (-) TimerEvent: {}
[4.741143] (-) TimerEvent: {}
[4.836095] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rclcpp: 2.4.3 (/opt/ros/foxy/share/rclcpp/cmake)\n'}
[4.841321] (-) TimerEvent: {}
[4.942269] (-) TimerEvent: {}
[5.043266] (-) TimerEvent: {}
[5.144527] (-) TimerEvent: {}
[5.200275] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at cmake/install_package.cmake:101 (cmake_policy):\n'}
[5.200940] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0026 will be removed from a future version\n'}
[5.201342] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[5.201665] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.202303] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[5.202701] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[5.203195] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[5.203622] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[5.204094] (ydlidar_sdk) StderrLine: {'line': b'Call Stack (most recent call first):\n'}
[5.204587] (ydlidar_sdk) StderrLine: {'line': b'  CMakeLists.txt:168 (install_package)\n'}
[5.205064] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.205472] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.212236] (ydlidar_sdk) StderrLine: {'line': b'CMake Warning (dev) at cmake/install_package.cmake:191 (install):\n'}
[5.212868] (ydlidar_sdk) StderrLine: {'line': b'  Policy CMP0062 is not set: Disallow install() of export() result.  Run\n'}
[5.213235] (ydlidar_sdk) StderrLine: {'line': b'  "cmake --help-policy CMP0062" for policy details.  Use the cmake_policy\n'}
[5.213574] (ydlidar_sdk) StderrLine: {'line': b'  command to set the policy and suppress this warning.\n'}
[5.213916] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.214261] (ydlidar_sdk) StderrLine: {'line': b'  The file\n'}
[5.214550] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.214814] (ydlidar_sdk) StderrLine: {'line': b'    /home/ubuntu/robot_ws/build/ydlidar_sdk/ydlidar_sdkTargets.cmake\n'}
[5.215082] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.215345] (ydlidar_sdk) StderrLine: {'line': b'  was generated by the export() command.  It should not be installed with the\n'}
[5.215603] (ydlidar_sdk) StderrLine: {'line': b'  install() command.  Use the install(EXPORT) mechanism instead.  See the\n'}
[5.215863] (ydlidar_sdk) StderrLine: {'line': b'  cmake-packages(7) manual for more.\n'}
[5.216206] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.216542] (ydlidar_sdk) StderrLine: {'line': b'Call Stack (most recent call first):\n'}
[5.216898] (ydlidar_sdk) StderrLine: {'line': b'  CMakeLists.txt:168 (install_package)\n'}
[5.217198] (ydlidar_sdk) StderrLine: {'line': b'This warning is for project developers.  Use -Wno-dev to suppress it.\n'}
[5.217487] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[5.244691] (-) TimerEvent: {}
[5.254534] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[5.255906] (ydlidar_sdk) StdoutLine: {'line': b'-- +===========================================================================+\n'}
[5.257029] (ydlidar_sdk) StdoutLine: {'line': b'-- |         Resulting configuration for                             |\n'}
[5.257470] (ydlidar_sdk) StdoutLine: {'line': b'-- +===========================================================================+\n'}
[5.257890] (ydlidar_sdk) StdoutLine: {'line': b'--  _________________________ PLATFORM _____________________________\n'}
[5.258233] (ydlidar_sdk) StdoutLine: {'line': b'--  Host                        : Linux5.4.0-1069-raspiaarch64\n'}
[5.258654] (ydlidar_sdk) StdoutLine: {'line': b'--  Is the system big endian?   :  No \n'}
[5.259097] (ydlidar_sdk) StdoutLine: {'line': b'--  Word size (32/64 bit)       : 64\n'}
[5.259614] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake version               : 3.16.3\n'}
[5.260042] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake generator             : Unix Makefiles\n'}
[5.260502] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake build tool            : /usr/bin/make\n'}
[5.260835] (ydlidar_sdk) StdoutLine: {'line': b'--  Compiler                    : GNU\n'}
[5.261119] (ydlidar_sdk) StdoutLine: {'line': b'--  Configuration               : \n'}
[5.261392] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[5.261662] (ydlidar_sdk) StdoutLine: {'line': b'--  __________________________ OPTIONS _____________________________\n'}
[5.262018] (ydlidar_sdk) StdoutLine: {'line': b'--  Build YDLidar-SDK as a shared library?\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[5.262313] (ydlidar_sdk) StdoutLine: {'line': b'--  Build Examples?\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 : Yes \n'}
[5.262599] (ydlidar_sdk) StdoutLine: {'line': b'--  Build C Sharp API?\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[5.262894] (ydlidar_sdk) StdoutLine: {'line': b'--  Build TEST?  \t\t\t\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[5.263176] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[5.263448] (ydlidar_sdk) StdoutLine: {'line': b'--  _________________________ INSTALL _____________________\n'}
[5.263715] (ydlidar_sdk) StdoutLine: {'line': b'--  Install prefix                    : /home/ubuntu/robot_ws/install/ydlidar_sdk\n'}
[5.264072] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[5.264529] (ydlidar_sdk) StdoutLine: {'line': b'--  _______________________ WRAPPERS/BINDINGS ______________________\n'}
[5.264997] (ydlidar_sdk) StdoutLine: {'line': b'--  Python bindings (pyydlidar)   :  No \n'}
[5.265453] (ydlidar_sdk) StdoutLine: {'line': b'--   - dep: Swig found?       :  No [Version: ]\n'}
[5.265854] (ydlidar_sdk) StdoutLine: {'line': b'--   - dep: PythonLibs found?  : Yes [Version: 3.8.10]\n'}
[5.266142] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[5.266453] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[5.270542] (ydlidar_sdk) StdoutLine: {'line': b'-- Configuring done\n'}
[5.328328] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rosidl_adapter: 1.3.1 (/opt/ros/foxy/share/rosidl_adapter/cmake)\n'}
[5.344869] (-) TimerEvent: {}
[5.390813] (ydlidar_sdk) StdoutLine: {'line': b'-- Generating done\n'}
[5.401247] (ydlidar_sdk) StdoutLine: {'line': b'-- Build files have been written to: /home/ubuntu/robot_ws/build/ydlidar_sdk\n'}
[5.428442] (ydlidar_sdk) CommandEnded: {'returncode': 0}
[5.430457] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'build'}
[5.433313] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ubuntu/robot_ws/build/ydlidar_sdk', '--', '-j4', '-l4'], 'cwd': '/home/ubuntu/robot_ws/build/ydlidar_sdk', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ubuntu'), ('SSH_AGENT_PID', '1914'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ubuntu'), ('OLDPWD', '/home/ubuntu'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1648'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ubuntu'), ('JOURNAL_STREAM', '9:37231'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ubuntu'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu:@/tmp/.ICE-unix/2263,unix/ubuntu:/tmp/.ICE-unix/2263'), ('INVOCATION_ID', '07c1802c0aa34cad91a341208710bc27'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/14b98bcc_90b3_485a_badd_f52529966b93'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.76'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ubuntu/robot_ws/build/ydlidar_sdk'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003')]), 'shell': False}
[5.445412] (-) TimerEvent: {}
[5.547881] (-) TimerEvent: {}
[5.591467] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_sdk\x1b[0m\n'}
[5.648053] (-) TimerEvent: {}
[5.721214] (ydlidar_sdk) StdoutLine: {'line': b'[  2%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/common/ydlidar_def.cpp.o\x1b[0m\n'}
[5.725522] (ydlidar_sdk) StdoutLine: {'line': b'[  4%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/ActiveSocket.cpp.o\x1b[0m\n'}
[5.726802] (ydlidar_sdk) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/PassiveSocket.cpp.o\x1b[0m\n'}
[5.728155] (ydlidar_sdk) StdoutLine: {'line': b'[  9%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/base/timer.cpp.o\x1b[0m\n'}
[5.748415] (-) TimerEvent: {}
[5.849745] (-) TimerEvent: {}
[5.941251] (ydlidar_sdk) StdoutLine: {'line': b'[ 11%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/SimpleSocket.cpp.o\x1b[0m\n'}
[5.950010] (-) TimerEvent: {}
[6.050963] (-) TimerEvent: {}
[6.152005] (-) TimerEvent: {}
[6.253172] (-) TimerEvent: {}
[6.354923] (-) TimerEvent: {}
[6.456056] (-) TimerEvent: {}
[6.535816] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/aarch64-linux-gnu/libcrypto.so (found version "1.1.1f")  \n'}
[6.556361] (-) TimerEvent: {}
[6.657396] (-) TimerEvent: {}
[6.758459] (-) TimerEvent: {}
[6.768541] (ydlidar_sdk) StdoutLine: {'line': b'[ 14%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/serial.cpp.o\x1b[0m\n'}
[6.858746] (-) TimerEvent: {}
[6.959705] (-) TimerEvent: {}
[6.986171] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/foxy/include  \n'}
[7.059961] (-) TimerEvent: {}
[7.161555] (-) TimerEvent: {}
[7.263058] (-) TimerEvent: {}
[7.364681] (-) TimerEvent: {}
[7.466436] (-) TimerEvent: {}
[7.559050] (ydlidar_sdk) StdoutLine: {'line': b'[ 16%] \x1b[32mBuilding C object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/lock.c.o\x1b[0m\n'}
[7.566729] (-) TimerEvent: {}
[7.669071] (-) TimerEvent: {}
[7.770171] (-) TimerEvent: {}
[7.859978] (ydlidar_sdk) StdoutLine: {'line': b'[ 19%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/list_ports_linux.cpp.o\x1b[0m\n'}
[7.871939] (-) TimerEvent: {}
[7.973650] (-) TimerEvent: {}
[8.075470] (-) TimerEvent: {}
[8.179446] (-) TimerEvent: {}
[8.281246] (-) TimerEvent: {}
[8.383045] (-) TimerEvent: {}
[8.387112] (ydlidar_sdk) StdoutLine: {'line': b'[ 21%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/unix_serial.cpp.o\x1b[0m\n'}
[8.394182] (ydlidar_sdk) StdoutLine: {'line': b'[ 23%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/CYdLidar.cpp.o\x1b[0m\n'}
[8.483256] (-) TimerEvent: {}
[8.584279] (-) TimerEvent: {}
[8.654652] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/core/serial/common.h:45\x1b[m\x1b[K,\n'}
[8.655949] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/core/serial/serial.cpp:12\x1b[m\x1b[K:\n'}
[8.657221] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.658350] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[8.659486] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[8.661030] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[8.662546] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[8.663489] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[8.664492] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[8.665334] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[8.666141] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[8.666920] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[8.667621] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[8.668545] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[8.669469] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[8.670286] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[8.671053] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[8.671804] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[8.672775] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[8.673632] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[8.674489] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[8.675323] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[8.676128] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[8.693213] (-) TimerEvent: {}
[8.694044] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[8.694891] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[8.695771] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[8.697222] (ydlidar_sdk) StderrLine: {'line': b'  147 | fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[8.698168] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[8.699006] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[8.699885] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[8.700909] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[8.701797] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[8.702729] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[8.703599] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[8.704518] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[8.705315] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[8.706093] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[8.793520] (-) TimerEvent: {}
[8.894579] (-) TimerEvent: {}
[8.972996] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[8.994867] (-) TimerEvent: {}
[9.096081] (-) TimerEvent: {}
[9.197329] (-) TimerEvent: {}
[9.298448] (-) TimerEvent: {}
[9.399578] (-) TimerEvent: {}
[9.500960] (-) TimerEvent: {}
[9.602224] (-) TimerEvent: {}
[9.703522] (-) TimerEvent: {}
[9.761262] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 1.0.4 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)\n'}
[9.793810] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[9.803937] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[9.804853] (-) TimerEvent: {}
[9.906134] (-) TimerEvent: {}
[10.007211] (-) TimerEvent: {}
[10.108726] (-) TimerEvent: {}
[10.215928] (ydlidar_sdk) StdoutLine: {'line': b'[ 26%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ETLidarDriver.cpp.o\x1b[0m\n'}
[10.226354] (-) TimerEvent: {}
[10.327564] (-) TimerEvent: {}
[10.432380] (-) TimerEvent: {}
[10.536669] (-) TimerEvent: {}
[10.640773] (-) TimerEvent: {}
[10.668276] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[10.669117] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[10.669858] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.cpp:29\x1b[m\x1b[K:\n'}
[10.670448] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.671047] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[10.671695] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[10.672293] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[10.672936] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[10.673417] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[10.673870] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[10.679656] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[10.680658] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[10.681511] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[10.682441] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[10.683337] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[10.684097] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[10.704454] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[10.705095] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[10.705588] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[10.705992] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[10.706418] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[10.706868] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[10.707302] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[10.707747] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[10.708338] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[10.708967] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[10.709431] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[10.709985] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[10.710818] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[10.712234] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[10.713703] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[10.714597] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[10.715138] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[10.715677] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[10.728383] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[10.729206] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[10.729804] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[10.730448] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[10.740996] (-) TimerEvent: {}
[10.843257] (-) TimerEvent: {}
[10.944276] (-) TimerEvent: {}
[11.023547] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[11.024957] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[11.044407] (-) TimerEvent: {}
[11.145874] (-) TimerEvent: {}
[11.146783] (ydlidar_sdk) StdoutLine: {'line': b'[ 28%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/GSLidarDriver.cpp.o\x1b[0m\n'}
[11.246302] (-) TimerEvent: {}
[11.348540] (-) TimerEvent: {}
[11.450017] (-) TimerEvent: {}
[11.462176] (ydlidar_sdk) StdoutLine: {'line': b'[ 30%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/SDMLidarDriver.cpp.o\x1b[0m\n'}
[11.550312] (-) TimerEvent: {}
[11.651957] (-) TimerEvent: {}
[11.753451] (-) TimerEvent: {}
[11.854767] (-) TimerEvent: {}
[11.955954] (-) TimerEvent: {}
[12.068889] (-) TimerEvent: {}
[12.176374] (-) TimerEvent: {}
[12.190704] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n'}
[12.191885] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads\n'}
[12.276578] (-) TimerEvent: {}
[12.377510] (-) TimerEvent: {}
[12.478857] (-) TimerEvent: {}
[12.580206] (-) TimerEvent: {}
[12.681805] (-) TimerEvent: {}
[12.783513] (-) TimerEvent: {}
[12.852723] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/ETLidarDriver.h:46\x1b[m\x1b[K,\n'}
[12.853399] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/ETLidarDriver.cpp:32\x1b[m\x1b[K:\n'}
[12.853849] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[12.854324] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[12.854811] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[12.868711] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[12.869734] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[12.870796] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[12.871512] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[12.872920] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[12.873659] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[12.874095] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[12.874491] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[12.874893] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[12.875360] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[12.875793] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[12.876383] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[12.877027] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[12.877677] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[12.878246] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[12.878837] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[12.879496] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[12.888357] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[12.888922] (-) TimerEvent: {}
[12.889723] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[12.890168] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[12.890505] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[12.891222] (ydlidar_sdk) StderrLine: {'line': b'  147 | fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[12.900897] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[12.901785] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[12.902512] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[12.903610] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[12.904200] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[12.904574] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[12.904924] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[12.905197] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[12.905477] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[12.905796] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[12.989211] (-) TimerEvent: {}
[13.083463] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads - not found\n'}
[13.085321] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthread\n'}
[13.089428] (-) TimerEvent: {}
[13.191100] (-) TimerEvent: {}
[13.292445] (-) TimerEvent: {}
[13.393768] (-) TimerEvent: {}
[13.495445] (-) TimerEvent: {}
[13.596961] (-) TimerEvent: {}
[13.698860] (-) TimerEvent: {}
[13.805093] (-) TimerEvent: {}
[13.906733] (-) TimerEvent: {}
[14.008227] (-) TimerEvent: {}
[14.039701] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthread - found\n'}
[14.045331] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[14.108373] (-) TimerEvent: {}
[14.209708] (-) TimerEvent: {}
[14.311333] (-) TimerEvent: {}
[14.413192] (-) TimerEvent: {}
[14.514850] (-) TimerEvent: {}
[14.615807] (-) TimerEvent: {}
[14.717034] (-) TimerEvent: {}
[14.818356] (-) TimerEvent: {}
[14.843534] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/SDMLidarDriver.h:57\x1b[m\x1b[K,\n'}
[14.844740] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:35\x1b[m\x1b[K:\n'}
[14.847804] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[14.848817] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.849986] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[14.851325] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.863506] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.864359] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.865105] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.866827] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.h:57\x1b[m\x1b[K,\n'}
[14.867582] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:36\x1b[m\x1b[K:\n'}
[14.868472] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[14.869237] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.869977] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[14.870813] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.871254] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.871541] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.871811] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.872091] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.872497] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[14.872802] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[14.873128] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[14.873451] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[14.873716] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.873985] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[14.874246] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[14.874503] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.874767] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.875032] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.875401] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[14.875682] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.875955] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.876604] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.876933] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.877213] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.877560] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[14.877860] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[14.878131] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[14.878394] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[14.878657] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.878928] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[14.879199] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[14.879469] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.879740] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.880013] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.880984] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[14.881633] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.882206] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.882799] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.883466] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.884090] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.884830] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[14.885449] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.886020] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.886614] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.887213] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.887914] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.888559] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[14.888929] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.889204] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.889474] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.889747] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.890013] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.890354] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[14.890636] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.890936] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.891204] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.891470] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.891732] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[14.892031] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[14.892400] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[14.892752] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[14.893024] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[14.893284] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[14.918614] (-) TimerEvent: {}
[15.020156] (-) TimerEvent: {}
[15.121936] (-) TimerEvent: {}
[15.223522] (-) TimerEvent: {}
[15.325104] (-) TimerEvent: {}
[15.426521] (-) TimerEvent: {}
[15.527993] (-) TimerEvent: {}
[15.629471] (-) TimerEvent: {}
[15.731133] (-) TimerEvent: {}
[15.832559] (-) TimerEvent: {}
[15.933786] (-) TimerEvent: {}
[16.035377] (-) TimerEvent: {}
[16.094740] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::waitPackage(node_info*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[16.096230] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:891:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K-Waddress-of-packed-member\x1b[m\x1b[K]\n'}
[16.097610] (ydlidar_sdk) StderrLine: {'line': b'  891 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[16.098907] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[16.101226] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:894:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K-Waddress-of-packed-member\x1b[m\x1b[K]\n'}
[16.102644] (ydlidar_sdk) StderrLine: {'line': b'  894 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[16.116742] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[16.118462] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:897:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K-Waddress-of-packed-member\x1b[m\x1b[K]\n'}
[16.119764] (ydlidar_sdk) StderrLine: {'line': b'  897 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[16.121220] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[16.135692] (-) TimerEvent: {}
[16.181532] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::SDMLidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[16.182698] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:808:44:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[16.183995] (ydlidar_sdk) StderrLine: {'line': b'  808 |     printf("[YDLIDAR] Create SDM thread 0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K\\n", \x1b[32m\x1b[K_thread.getHandle()\x1b[m\x1b[K);\n'}
[16.184966] (ydlidar_sdk) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K~^\x1b[m\x1b[K     \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[16.185807] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K|\x1b[m\x1b[K                      \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[16.186626] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K           \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[16.187532] (ydlidar_sdk) StderrLine: {'line': b'      |                                           \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[16.188511] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found sensor_msgs: 2.0.5 (/opt/ros/foxy/share/sensor_msgs/cmake)\n'}
[16.196434] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[16.197588] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1488:45:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[16.198439] (ydlidar_sdk) StderrLine: {'line': b' 1488 |     printf("[GS2Lidar] Create GS2 thread 0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K\\n", \x1b[32m\x1b[K_thread.getHandle()\x1b[m\x1b[K);\n'}
[16.199308] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K~^\x1b[m\x1b[K     \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[16.200201] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K|\x1b[m\x1b[K                      \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[16.201041] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K           \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[16.201786] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[16.235961] (-) TimerEvent: {}
[16.344416] (-) TimerEvent: {}
[16.452854] (-) TimerEvent: {}
[16.554414] (-) TimerEvent: {}
[16.655743] (-) TimerEvent: {}
[16.756837] (-) TimerEvent: {}
[16.857939] (-) TimerEvent: {}
[16.959129] (-) TimerEvent: {}
[17.060133] (-) TimerEvent: {}
[17.161277] (-) TimerEvent: {}
[17.277633] (-) TimerEvent: {}
[17.378866] (-) TimerEvent: {}
[17.480395] (-) TimerEvent: {}
[17.561352] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found visualization_msgs: 2.0.5 (/opt/ros/foxy/share/visualization_msgs/cmake)\n'}
[17.580653] (-) TimerEvent: {}
[17.582334] (ydlidar_sdk) StdoutLine: {'line': b'[ 33%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/YDlidarDriver.cpp.o\x1b[0m\n'}
[17.680897] (-) TimerEvent: {}
[17.782268] (-) TimerEvent: {}
[17.883512] (-) TimerEvent: {}
[17.984859] (-) TimerEvent: {}
[18.086181] (-) TimerEvent: {}
[18.188010] (-) TimerEvent: {}
[18.190602] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found std_srvs: 2.0.5 (/opt/ros/foxy/share/std_srvs/cmake)\n'}
[18.288324] (-) TimerEvent: {}
[18.389752] (-) TimerEvent: {}
[18.474109] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.9.8 (/opt/ros/foxy/share/ament_lint_auto/cmake)\n'}
[18.489991] (-) TimerEvent: {}
[18.591312] (-) TimerEvent: {}
[18.692548] (-) TimerEvent: {}
[18.793812] (-) TimerEvent: {}
[18.895319] (-) TimerEvent: {}
[18.996951] (-) TimerEvent: {}
[19.098277] (-) TimerEvent: {}
[19.199667] (-) TimerEvent: {}
[19.256733] (ydlidar_sdk) StdoutLine: {'line': b'[ 35%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ydlidar_sdk.cpp.o\x1b[0m\n'}
[19.299988] (-) TimerEvent: {}
[19.393174] (ydlidar_sdk) StdoutLine: {'line': b'[ 38%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/NoiseFilter.cpp.o\x1b[0m\n'}
[19.400256] (-) TimerEvent: {}
[19.501385] (-) TimerEvent: {}
[19.602581] (-) TimerEvent: {}
[19.705459] (-) TimerEvent: {}
[19.762777] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'copyright' to check source files copyright and LICENSE\n"}
[19.805748] (-) TimerEvent: {}
[19.906981] (-) TimerEvent: {}
[19.983411] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[19.986108] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cppcheck include dirs: /home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src\n'}
[19.987509] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[20.007271] (-) TimerEvent: {}
[20.109080] (-) TimerEvent: {}
[20.205987] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'cpplint' to check C / C++ code against the Google style\n"}
[20.209267] (-) TimerEvent: {}
[20.216618] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cpplint exclude dirs and/or files: \n'}
[20.256609] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[20.303006] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[20.309494] (-) TimerEvent: {}
[20.334803] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the style conventions in PEP 257\n"}
[20.409741] (-) TimerEvent: {}
[20.511272] (-) TimerEvent: {}
[20.582659] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[20.583658] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[20.611557] (-) TimerEvent: {}
[20.627729] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[20.682105] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configuring done\n'}
[20.711869] (-) TimerEvent: {}
[20.813024] (-) TimerEvent: {}
[20.814403] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Generating done\n'}
[20.827922] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Build files have been written to: /home/ubuntu/robot_ws/build/ydlidar_ros2_driver\n'}
[20.887725] (ydlidar_ros2_driver) CommandEnded: {'returncode': 0}
[20.891546] (ydlidar_ros2_driver) JobProgress: {'identifier': 'ydlidar_ros2_driver', 'progress': 'build'}
[20.893739] (ydlidar_ros2_driver) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver', '--', '-j4', '-l4'], 'cwd': '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ubuntu'), ('SSH_AGENT_PID', '1914'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ubuntu'), ('OLDPWD', '/home/ubuntu'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1648'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ubuntu'), ('JOURNAL_STREAM', '9:37231'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ubuntu'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu:@/tmp/.ICE-unix/2263,unix/ubuntu:/tmp/.ICE-unix/2263'), ('INVOCATION_ID', '07c1802c0aa34cad91a341208710bc27'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/14b98bcc_90b3_485a_badd_f52529966b93'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.76'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[20.913554] (-) TimerEvent: {}
[21.015492] (-) TimerEvent: {}
[21.116686] (-) TimerEvent: {}
[21.141909] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[21.142844] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[21.143667] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/ydlidar_sdk.cpp:27\x1b[m\x1b[K:\n'}
[21.144460] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.145320] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.146130] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[21.146948] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.147900] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.148799] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.149712] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.152001] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.153079] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[21.153858] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[21.155786] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[21.157920] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[21.158714] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.159256] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[21.159771] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[21.160727] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.161526] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.176398] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.177356] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[21.178087] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.178949] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.179666] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.180592] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.181524] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.182416] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[21.183191] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.183919] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.184889] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.185728] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.186591] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.187610] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[21.208572] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.209405] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.210315] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.210997] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.216914] (-) TimerEvent: {}
[21.317957] (-) TimerEvent: {}
[21.387690] (ydlidar_sdk) StdoutLine: {'line': b'[ 40%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/StrongLightFilter.cpp.o\x1b[0m\n'}
[21.418183] (-) TimerEvent: {}
[21.519307] (-) TimerEvent: {}
[21.541070] (ydlidar_ros2_driver) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_ros2_driver_node\x1b[0m\n'}
[21.542157] (ydlidar_ros2_driver) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_ros2_driver_client\x1b[0m\n'}
[21.545947] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/YDlidarDriver.h:46\x1b[m\x1b[K,\n'}
[21.547310] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:26\x1b[m\x1b[K:\n'}
[21.548127] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.549124] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.549926] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[21.550637] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.551328] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.552219] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.553097] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.553971] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.555872] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[21.562743] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[21.563556] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[21.564333] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[21.565109] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.565876] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[21.566753] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[21.567585] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.568480] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.569194] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.570024] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[21.570756] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.571458] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.572143] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.585247] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.585988] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.586816] (ydlidar_sdk) StderrLine: {'line': b'  147 | fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[21.587548] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.588352] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.589155] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.589936] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.590653] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[21.591385] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[21.592141] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[21.592847] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[21.593600] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[21.594474] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[21.619567] (-) TimerEvent: {}
[21.720611] (-) TimerEvent: {}
[21.821615] (-) TimerEvent: {}
[21.923175] (-) TimerEvent: {}
[22.025954] (-) TimerEvent: {}
[22.127766] (-) TimerEvent: {}
[22.229373] (-) TimerEvent: {}
[22.331032] (-) TimerEvent: {}
[22.389729] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::YDlidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.391333] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:1865:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[22.392581] (ydlidar_sdk) StderrLine: {'line': b' 1865 |   printf("[YDLIDAR] Create thread 0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K\\n", \x1b[32m\x1b[K_thread.getHandle()\x1b[m\x1b[K);\n'}
[22.393533] (ydlidar_sdk) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K~^\x1b[m\x1b[K     \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.394413] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K|\x1b[m\x1b[K                      \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[22.395330] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K           \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[22.396219] (ydlidar_sdk) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[22.431288] (-) TimerEvent: {}
[22.454343] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_ros2_driver_node.dir/src/ydlidar_ros2_driver_node.cpp.o\x1b[0m\n'}
[22.459658] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_ros2_driver_client.dir/src/ydlidar_ros2_driver_client.cpp.o\x1b[0m\n'}
[22.531621] (-) TimerEvent: {}
[22.633424] (-) TimerEvent: {}
[22.735672] (-) TimerEvent: {}
[22.837358] (-) TimerEvent: {}
[22.938834] (-) TimerEvent: {}
[23.040602] (-) TimerEvent: {}
[23.142145] (-) TimerEvent: {}
[23.243540] (-) TimerEvent: {}
[23.345267] (-) TimerEvent: {}
[23.447164] (-) TimerEvent: {}
[23.548813] (-) TimerEvent: {}
[23.650474] (-) TimerEvent: {}
[23.751590] (-) TimerEvent: {}
[23.852831] (-) TimerEvent: {}
[23.954051] (-) TimerEvent: {}
[24.055327] (-) TimerEvent: {}
[24.156586] (-) TimerEvent: {}
[24.257741] (-) TimerEvent: {}
[24.358807] (-) TimerEvent: {}
[24.459949] (-) TimerEvent: {}
[24.561084] (-) TimerEvent: {}
[24.662219] (-) TimerEvent: {}
[24.763238] (-) TimerEvent: {}
[24.864442] (-) TimerEvent: {}
[24.965903] (-) TimerEvent: {}
[25.027790] (ydlidar_sdk) StdoutLine: {'line': b'[ 42%] \x1b[32m\x1b[1mLinking CXX static library libydlidar_sdk.a\x1b[0m\n'}
[25.066128] (-) TimerEvent: {}
[25.167723] (-) TimerEvent: {}
[25.269907] (-) TimerEvent: {}
[25.371007] (-) TimerEvent: {}
[25.417644] (ydlidar_sdk) StdoutLine: {'line': b'[ 42%] Built target ydlidar_sdk\n'}
[25.471325] (-) TimerEvent: {}
[25.474381] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target et_test\x1b[0m\n'}
[25.531359] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target sdm_test\x1b[0m\n'}
[25.555734] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tri_test\x1b[0m\n'}
[25.562399] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gs_ota\x1b[0m\n'}
[25.571582] (-) TimerEvent: {}
[25.625711] (ydlidar_sdk) StdoutLine: {'line': b'[ 45%] \x1b[32mBuilding CXX object samples/CMakeFiles/et_test.dir/et_test.cpp.o\x1b[0m\n'}
[25.657789] (ydlidar_sdk) StdoutLine: {'line': b'[ 47%] \x1b[32mBuilding CXX object samples/CMakeFiles/sdm_test.dir/sdm_test.cpp.o\x1b[0m\n'}
[25.671827] (-) TimerEvent: {}
[25.716789] (ydlidar_sdk) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object samples/CMakeFiles/gs_ota.dir/gs_ota.cpp.o\x1b[0m\n'}
[25.726607] (ydlidar_sdk) StdoutLine: {'line': b'[ 52%] \x1b[32mBuilding CXX object samples/CMakeFiles/tri_test.dir/tri_test.cpp.o\x1b[0m\n'}
[25.772082] (-) TimerEvent: {}
[25.873356] (-) TimerEvent: {}
[25.974475] (-) TimerEvent: {}
[26.076135] (-) TimerEvent: {}
[26.177833] (-) TimerEvent: {}
[26.279575] (-) TimerEvent: {}
[26.381135] (-) TimerEvent: {}
[26.482720] (-) TimerEvent: {}
[26.584712] (-) TimerEvent: {}
[26.686669] (-) TimerEvent: {}
[26.788333] (-) TimerEvent: {}
[26.889916] (-) TimerEvent: {}
[26.991623] (-) TimerEvent: {}
[27.093225] (-) TimerEvent: {}
[27.118801] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[27.120465] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[27.133577] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tri_test.cpp:34\x1b[m\x1b[K:\n'}
[27.135146] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[27.136758] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.138287] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[27.139700] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.141098] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.142419] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.144819] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.148431] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.149474] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[27.150567] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[27.151570] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[27.153127] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[27.154010] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.154922] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[27.155792] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[27.157948] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.158730] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.159523] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.160363] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.181432] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.182524] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.183487] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.184415] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.185424] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.186522] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.187633] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.188755] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.189643] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.190591] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.191588] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.204051] (-) TimerEvent: {}
[27.205563] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.206658] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.207605] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.208578] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.209474] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.304354] (-) TimerEvent: {}
[27.370767] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[27.371737] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[27.372595] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/et_test.cpp:34\x1b[m\x1b[K:\n'}
[27.373390] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[27.374171] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.374939] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[27.375853] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.376897] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.377751] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.378534] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.379804] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.380812] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[27.381653] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[27.382540] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[27.383319] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[27.384143] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.397168] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[27.397905] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[27.398620] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.399311] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.400071] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.400894] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.401566] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.402272] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.403097] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.403881] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.404721] (-) TimerEvent: {}
[27.417696] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.418965] (ydlidar_sdk) StderrLine: {'line': b'  147 | fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.419719] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.420555] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.421313] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.422057] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.422823] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.423678] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.424538] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.425376] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.426221] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.427230] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.448907] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[27.451158] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[27.452612] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/sdm_test.cpp:34\x1b[m\x1b[K:\n'}
[27.453398] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[27.454196] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.455077] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[27.456037] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.456989] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.457935] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.458752] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.459673] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.460565] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[27.461321] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[27.462058] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[27.462816] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[27.463506] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.476320] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[27.477331] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[27.478362] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.479195] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.479870] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.480705] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.481471] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.482338] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.483337] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.484586] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.485582] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.486566] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.487485] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.500534] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.501392] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.502131] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.502897] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.503746] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.504676] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.505604] (-) TimerEvent: {}
[27.520473] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.521499] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.522315] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.605867] (-) TimerEvent: {}
[27.707536] (-) TimerEvent: {}
[27.809496] (-) TimerEvent: {}
[27.850144] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[27.851160] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[27.851936] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/gs_ota.cpp:40\x1b[m\x1b[K:\n'}
[27.852781] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[27.853628] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.854518] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[27.855321] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.856117] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.856954] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.857701] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.859169] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.860045] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[27.860982] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[27.861768] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[27.862591] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[27.863381] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.864219] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[27.865209] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[27.866119] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.867031] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.867832] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.879550] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.880559] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.881586] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.882430] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.883141] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.883979] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.884846] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.885791] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.886626] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.887684] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.905133] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[27.905915] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[27.906824] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[27.907549] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[27.908424] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[27.909483] (-) TimerEvent: {}
[27.911670] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[27.912762] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[28.009755] (-) TimerEvent: {}
[28.111526] (-) TimerEvent: {}
[28.213295] (-) TimerEvent: {}
[28.314923] (-) TimerEvent: {}
[28.416736] (-) TimerEvent: {}
[28.518585] (-) TimerEvent: {}
[28.620250] (-) TimerEvent: {}
[28.722164] (-) TimerEvent: {}
[28.823917] (-) TimerEvent: {}
[28.925576] (-) TimerEvent: {}
[29.027165] (-) TimerEvent: {}
[29.129006] (-) TimerEvent: {}
[29.230862] (-) TimerEvent: {}
[29.332670] (-) TimerEvent: {}
[29.434706] (-) TimerEvent: {}
[29.536385] (-) TimerEvent: {}
[29.638040] (-) TimerEvent: {}
[29.739795] (-) TimerEvent: {}
[29.741611] (ydlidar_sdk) StdoutLine: {'line': b'[ 54%] \x1b[32m\x1b[1mLinking CXX executable ../et_test\x1b[0m\n'}
[29.791730] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tri_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[29.794112] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tri_test.cpp:325:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[29.796265] (ydlidar_sdk) StderrLine: {'line': b'  325 |       printf("Scan received [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points scanFreq [%.02f]\\n",\n'}
[29.798496] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[29.800441] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[29.801900] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[29.803426] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[29.816402] (ydlidar_sdk) StderrLine: {'line': b'  326 |              \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[29.817348] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K  \n'}
[29.818170] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[29.818872] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[29.840062] (-) TimerEvent: {}
[29.912242] (ydlidar_sdk) StdoutLine: {'line': b'[ 57%] \x1b[32m\x1b[1mLinking CXX executable ../sdm_test\x1b[0m\n'}
[29.940434] (-) TimerEvent: {}
[30.041799] (-) TimerEvent: {}
[30.143389] (-) TimerEvent: {}
[30.244705] (-) TimerEvent: {}
[30.345989] (-) TimerEvent: {}
[30.448213] (-) TimerEvent: {}
[30.550241] (-) TimerEvent: {}
[30.652551] (-) TimerEvent: {}
[30.754615] (-) TimerEvent: {}
[30.824885] (ydlidar_sdk) StdoutLine: {'line': b'[ 57%] Built target et_test\n'}
[30.854927] (-) TimerEvent: {}
[30.884915] (ydlidar_sdk) StdoutLine: {'line': b'[ 57%] Built target sdm_test\n'}
[30.948831] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tri_restart\x1b[0m\n'}
[30.955306] (-) TimerEvent: {}
[31.025558] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gs_test\x1b[0m\n'}
[31.055540] (-) TimerEvent: {}
[31.100925] (ydlidar_sdk) StdoutLine: {'line': b'[ 59%] \x1b[32mBuilding CXX object samples/CMakeFiles/tri_restart.dir/tri_restart.cpp.o\x1b[0m\n'}
[31.155864] (-) TimerEvent: {}
[31.233333] (ydlidar_sdk) StdoutLine: {'line': b'[ 61%] \x1b[32mBuilding CXX object samples/CMakeFiles/gs_test.dir/gs_test.cpp.o\x1b[0m\n'}
[31.256370] (-) TimerEvent: {}
[31.358575] (-) TimerEvent: {}
[31.460322] (-) TimerEvent: {}
[31.562088] (-) TimerEvent: {}
[31.588688] (ydlidar_sdk) StdoutLine: {'line': b'[ 64%] \x1b[32m\x1b[1mLinking CXX executable ../tri_test\x1b[0m\n'}
[31.662379] (-) TimerEvent: {}
[31.763976] (-) TimerEvent: {}
[31.845474] (ydlidar_sdk) StdoutLine: {'line': b'[ 66%] \x1b[32m\x1b[1mLinking CXX executable ../gs_ota\x1b[0m\n'}
[31.864344] (-) TimerEvent: {}
[31.966454] (-) TimerEvent: {}
[32.068336] (-) TimerEvent: {}
[32.170385] (-) TimerEvent: {}
[32.301949] (-) TimerEvent: {}
[32.403866] (-) TimerEvent: {}
[32.505437] (-) TimerEvent: {}
[32.607800] (-) TimerEvent: {}
[32.612881] (ydlidar_sdk) StdoutLine: {'line': b'[ 66%] Built target tri_test\n'}
[32.708226] (-) TimerEvent: {}
[32.751460] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tof_test\x1b[0m\n'}
[32.797872] (ydlidar_sdk) StdoutLine: {'line': b'[ 66%] Built target gs_ota\n'}
[32.808395] (-) TimerEvent: {}
[32.821848] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[32.823069] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[32.824020] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tri_restart.cpp:1\x1b[m\x1b[K:\n'}
[32.824988] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[32.825922] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[32.826684] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[32.827404] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[32.829165] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[32.830158] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[32.831133] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[32.831993] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[32.832887] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[32.833625] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[32.834297] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[32.834969] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[32.835755] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[32.836887] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[32.837740] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[32.838532] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[32.839370] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[32.860626] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[32.861721] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[32.862648] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[32.863660] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[32.864783] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[32.865936] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[32.866901] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[32.867683] (ydlidar_sdk) StderrLine: {'line': b'  147 | fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[32.868646] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[32.869384] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[32.870092] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[32.870863] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[32.871715] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[32.884977] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[32.885671] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[32.886457] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[32.887206] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[32.887913] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[32.908616] (-) TimerEvent: {}
[32.918092] (ydlidar_sdk) StdoutLine: {'line': b'[ 69%] \x1b[32mBuilding CXX object samples/CMakeFiles/tof_test.dir/tof_test.cpp.o\x1b[0m\n'}
[32.934907] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tri_and_gs_test\x1b[0m\n'}
[33.008894] (-) TimerEvent: {}
[33.108660] (ydlidar_sdk) StdoutLine: {'line': b'[ 71%] \x1b[32mBuilding CXX object samples/CMakeFiles/tri_and_gs_test.dir/tri_and_gs_test.cpp.o\x1b[0m\n'}
[33.109669] (-) TimerEvent: {}
[33.137496] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:\x1b[m\x1b[K In lambda function:\n'}
[33.139251] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:168:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest_header\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[33.140547] (ydlidar_ros2_driver) StderrLine: {'line': b'  168 |     [&laser](\x1b[01;35m\x1b[Kconst std::shared_ptr<rmw_request_id_t> request_header\x1b[m\x1b[K,\n'}
[33.142608] (ydlidar_ros2_driver) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[33.145530] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:169:56:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kreq\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[33.146833] (ydlidar_ros2_driver) StderrLine: {'line': b'  169 |   \x1b[01;35m\x1b[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> req\x1b[m\x1b[K,\n'}
[33.148108] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[33.149570] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:170:51:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kresponse\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[33.151391] (ydlidar_ros2_driver) StderrLine: {'line': b'  170 |   \x1b[01;35m\x1b[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response\x1b[m\x1b[K) -> bool\n'}
[33.160488] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[33.180578] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:\x1b[m\x1b[K In lambda function:\n'}
[33.182661] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:178:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest_header\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[33.184410] (ydlidar_ros2_driver) StderrLine: {'line': b'  178 |     [&laser](\x1b[01;35m\x1b[Kconst std::shared_ptr<rmw_request_id_t> request_header\x1b[m\x1b[K,\n'}
[33.186059] (ydlidar_ros2_driver) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[33.188252] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:179:56:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kreq\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[33.189375] (ydlidar_ros2_driver) StderrLine: {'line': b'  179 |   \x1b[01;35m\x1b[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> req\x1b[m\x1b[K,\n'}
[33.190435] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[33.191886] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:180:51:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kresponse\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[33.192979] (ydlidar_ros2_driver) StderrLine: {'line': b'  180 |   \x1b[01;35m\x1b[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response\x1b[m\x1b[K) -> bool\n'}
[33.193881] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[33.209920] (-) TimerEvent: {}
[33.311067] (-) TimerEvent: {}
[33.412193] (-) TimerEvent: {}
[33.513370] (-) TimerEvent: {}
[33.614508] (-) TimerEvent: {}
[33.629143] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[33.630226] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[33.631114] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/gs_test.cpp:40\x1b[m\x1b[K:\n'}
[33.631879] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[33.632766] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[33.633534] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[33.634268] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[33.635032] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[33.635846] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[33.637669] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[33.638520] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[33.639429] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[33.640281] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[33.641108] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[33.661230] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[33.662176] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[33.662910] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[33.663662] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[33.664602] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[33.665334] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[33.666067] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[33.666895] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[33.667674] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[33.668552] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[33.669367] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[33.670145] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[33.670996] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[33.671967] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[33.689061] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[33.689766] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[33.690517] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[33.691495] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[33.692533] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[33.693426] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[33.694248] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[33.695264] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[33.695986] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[33.696811] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[33.714776] (-) TimerEvent: {}
[33.815874] (-) TimerEvent: {}
[33.917582] (-) TimerEvent: {}
[34.019592] (-) TimerEvent: {}
[34.121271] (-) TimerEvent: {}
[34.223042] (-) TimerEvent: {}
[34.324787] (-) TimerEvent: {}
[34.426591] (-) TimerEvent: {}
[34.497577] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[34.498967] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[34.500308] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tri_and_gs_test.cpp:1\x1b[m\x1b[K:\n'}
[34.501727] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[34.503350] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[34.505271] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[34.507272] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[34.509626] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[34.512304] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[34.513294] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[34.519558] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[34.520576] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[34.521533] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[34.522423] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[34.523299] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[34.524108] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[34.525066] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[34.525954] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[34.526760] (-) TimerEvent: {}
[34.540692] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[34.541782] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[34.542830] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[34.543865] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[34.544995] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[34.546084] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[34.547083] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[34.548104] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[34.549267] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[34.550326] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[34.551198] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[34.552040] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[34.565178] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[34.565983] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[34.566869] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[34.567757] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[34.568906] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[34.569949] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[34.571000] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[34.572069] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[34.627091] (-) TimerEvent: {}
[34.728406] (-) TimerEvent: {}
[34.830261] (-) TimerEvent: {}
[34.891326] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/gs_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[34.893037] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/gs_test.cpp:269:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[34.893978] (ydlidar_sdk) StderrLine: {'line': b'  269 |       printf("[\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points in module num [%d] env flag [0x%04X]\\n",\n'}
[34.894912] (ydlidar_sdk) StderrLine: {'line': b'      |                \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[34.895688] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[34.896513] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[34.897336] (ydlidar_sdk) StderrLine: {'line': b'      |                \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[34.898210] (ydlidar_sdk) StderrLine: {'line': b'  270 |              \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[34.899034] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[34.899886] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[34.900739] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[34.930547] (-) TimerEvent: {}
[35.031608] (-) TimerEvent: {}
[35.132801] (-) TimerEvent: {}
[35.234547] (-) TimerEvent: {}
[35.336265] (-) TimerEvent: {}
[35.439766] (-) TimerEvent: {}
[35.541587] (-) TimerEvent: {}
[35.643162] (-) TimerEvent: {}
[35.666029] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[35.667487] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[35.668866] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tof_test.cpp:38\x1b[m\x1b[K:\n'}
[35.680098] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[35.681681] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[35.682514] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[35.683320] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[35.684131] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[35.685101] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[35.685917] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[35.686696] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[35.687588] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[35.700907] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[35.702194] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[35.703057] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[35.704260] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[35.705000] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[35.705814] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[35.706466] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[35.707191] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[35.708011] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[35.709301] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[35.710569] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[35.711715] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[35.724959] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[35.725680] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[35.726348] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[35.727360] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[35.728269] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[35.729032] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[35.729802] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[35.730504] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[35.731206] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[35.731974] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[35.732846] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[35.733560] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[35.734290] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[35.735197] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[35.735996] (ydlidar_sdk) StdoutLine: {'line': b'[ 73%] \x1b[32m\x1b[1mLinking CXX executable ../tri_restart\x1b[0m\n'}
[35.752387] (-) TimerEvent: {}
[35.853491] (-) TimerEvent: {}
[35.954634] (-) TimerEvent: {}
[36.056430] (-) TimerEvent: {}
[36.158470] (-) TimerEvent: {}
[36.259900] (-) TimerEvent: {}
[36.361486] (-) TimerEvent: {}
[36.463161] (-) TimerEvent: {}
[36.493813] (ydlidar_sdk) StdoutLine: {'line': b'[ 76%] \x1b[32m\x1b[1mLinking CXX executable ../tri_and_gs_test\x1b[0m\n'}
[36.563715] (-) TimerEvent: {}
[36.666629] (-) TimerEvent: {}
[36.701809] (ydlidar_sdk) StdoutLine: {'line': b'[ 76%] Built target tri_restart\n'}
[36.767083] (-) TimerEvent: {}
[36.848790] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tmini_test\x1b[0m\n'}
[36.867300] (-) TimerEvent: {}
[36.875297] (ydlidar_sdk) StdoutLine: {'line': b'[ 78%] \x1b[32m\x1b[1mLinking CXX executable ../gs_test\x1b[0m\n'}
[36.967580] (-) TimerEvent: {}
[37.014650] (ydlidar_sdk) StdoutLine: {'line': b'[ 80%] \x1b[32mBuilding CXX object samples/CMakeFiles/tmini_test.dir/tmini_test.cpp.o\x1b[0m\n'}
[37.067950] (-) TimerEvent: {}
[37.170029] (-) TimerEvent: {}
[37.272288] (-) TimerEvent: {}
[37.374638] (-) TimerEvent: {}
[37.477073] (-) TimerEvent: {}
[37.579185] (-) TimerEvent: {}
[37.634316] (ydlidar_sdk) StdoutLine: {'line': b'[ 80%] Built target tri_and_gs_test\n'}
[37.679475] (-) TimerEvent: {}
[37.781413] (-) TimerEvent: {}
[37.796837] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target lidar_c_api_test\x1b[0m\n'}
[37.881690] (-) TimerEvent: {}
[37.971625] (ydlidar_sdk) StdoutLine: {'line': b'[ 83%] \x1b[32mBuilding C object samples/CMakeFiles/lidar_c_api_test.dir/lidar_c_api_test.c.o\x1b[0m\n'}
[37.982030] (-) TimerEvent: {}
[38.072665] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[Kcc1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcommand line option \xe2\x80\x98\x1b[01m\x1b[K-std=c++11\x1b[m\x1b[K\xe2\x80\x99 is valid for C++/ObjC++ but not for C\n'}
[38.082299] (-) TimerEvent: {}
[38.161875] (ydlidar_sdk) StdoutLine: {'line': b'[ 83%] Built target gs_test\n'}
[38.182583] (-) TimerEvent: {}
[38.284388] (-) TimerEvent: {}
[38.302719] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target scl_test\x1b[0m\n'}
[38.384639] (-) TimerEvent: {}
[38.484994] (ydlidar_sdk) StdoutLine: {'line': b'[ 85%] \x1b[32mBuilding CXX object samples/CMakeFiles/scl_test.dir/scl_test.cpp.o\x1b[0m\n'}
[38.486078] (-) TimerEvent: {}
[38.514543] (ydlidar_sdk) StdoutLine: {'line': b'[ 88%] \x1b[32m\x1b[1mLinking CXX executable ../tof_test\x1b[0m\n'}
[38.530092] (ydlidar_sdk) StdoutLine: {'line': b'[ 90%] \x1b[32m\x1b[1mLinking CXX executable ../lidar_c_api_test\x1b[0m\n'}
[38.586344] (-) TimerEvent: {}
[38.633848] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[38.635238] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[38.636687] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tmini_test.cpp:34\x1b[m\x1b[K:\n'}
[38.638192] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[38.639412] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[38.640555] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[38.641956] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[38.643390] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[38.644613] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[38.646058] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[38.648444] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[38.652310] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[38.653256] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[38.654130] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[38.654974] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[38.655704] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[38.662358] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[38.663134] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[38.663684] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[38.672654] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[38.673386] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[38.674132] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[38.674722] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[38.675238] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[38.675870] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[38.676552] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[38.677129] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[38.677854] (ydlidar_sdk) StderrLine: {'line': b'  147 | fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[38.678526] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[38.679241] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[38.679944] (ydlidar_sdk) StderrLine: {'line': b'      |                                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[38.685031] (ydlidar_sdk) StderrLine: {'line': b'      |                                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[38.685889] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[38.686691] (-) TimerEvent: {}
[38.692825] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[38.693563] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[38.694181] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[38.694813] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[38.695564] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[38.786995] (-) TimerEvent: {}
[38.888918] (-) TimerEvent: {}
[38.990740] (-) TimerEvent: {}
[39.092446] (-) TimerEvent: {}
[39.194075] (-) TimerEvent: {}
[39.296123] (-) TimerEvent: {}
[39.397184] (-) TimerEvent: {}
[39.499070] (-) TimerEvent: {}
[39.600996] (-) TimerEvent: {}
[39.702520] (-) TimerEvent: {}
[39.726272] (ydlidar_sdk) StdoutLine: {'line': b'[ 90%] Built target lidar_c_api_test\n'}
[39.802773] (-) TimerEvent: {}
[39.877143] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tea_test\x1b[0m\n'}
[39.903096] (-) TimerEvent: {}
[39.981760] (ydlidar_sdk) StdoutLine: {'line': b'[ 90%] Built target tof_test\n'}
[40.003413] (-) TimerEvent: {}
[40.027239] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] \x1b[32mBuilding CXX object samples/CMakeFiles/tea_test.dir/tea_test.cpp.o\x1b[0m\n'}
[40.098032] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[40.099886] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[40.101407] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/scl_test.cpp:34\x1b[m\x1b[K:\n'}
[40.102772] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[40.104240] (-) TimerEvent: {}
[40.105091] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[40.106019] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[40.106801] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[40.107554] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[40.108323] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[40.108955] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[40.109551] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[40.110267] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[40.110889] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[40.111530] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[40.124337] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[40.125250] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[40.126071] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[40.126836] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[40.127667] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[40.128502] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[40.129315] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[40.130118] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[40.130835] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[40.131556] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[40.132439] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[40.135360] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[40.156487] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[40.157585] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[40.158413] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[40.159161] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[40.159915] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[40.160816] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[40.161957] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[40.163461] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[40.164367] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[40.165154] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[40.165884] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[40.166631] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[40.204413] (-) TimerEvent: {}
[40.305475] (-) TimerEvent: {}
[40.406514] (-) TimerEvent: {}
[40.507524] (-) TimerEvent: {}
[40.609202] (-) TimerEvent: {}
[40.711097] (-) TimerEvent: {}
[40.812926] (-) TimerEvent: {}
[40.914809] (-) TimerEvent: {}
[40.987008] (ydlidar_sdk) StdoutLine: {'line': b'[ 95%] \x1b[32m\x1b[1mLinking CXX executable ../tmini_test\x1b[0m\n'}
[41.015131] (-) TimerEvent: {}
[41.116811] (-) TimerEvent: {}
[41.218634] (-) TimerEvent: {}
[41.320275] (-) TimerEvent: {}
[41.422003] (-) TimerEvent: {}
[41.524214] (-) TimerEvent: {}
[41.626567] (-) TimerEvent: {}
[41.728860] (-) TimerEvent: {}
[41.831319] (-) TimerEvent: {}
[41.933608] (-) TimerEvent: {}
[42.035624] (-) TimerEvent: {}
[42.071109] (ydlidar_sdk) StdoutLine: {'line': b'[ 95%] Built target tmini_test\n'}
[42.135939] (-) TimerEvent: {}
[42.161319] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:3\x1b[m\x1b[K,\n'}
[42.163786] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[42.166908] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tea_test.cpp:38\x1b[m\x1b[K:\n'}
[42.169097] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[42.170892] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:136:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.176018] (ydlidar_sdk) StderrLine: {'line': b'  136 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[42.192024] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[42.193071] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.194247] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.195187] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[42.196634] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:138:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.198118] (ydlidar_sdk) StderrLine: {'line': b'  138 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[42.199488] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[42.213140] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[42.214483] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[42.215758] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[42.217561] (ydlidar_sdk) StderrLine: {'line': b'  139 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[42.219401] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[42.221008] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.222299] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.223854] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:142:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.237048] (-) TimerEvent: {}
[42.237814] (ydlidar_sdk) StderrLine: {'line': b'  142 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[42.238606] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[42.239260] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.239935] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.240694] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[42.241368] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:147:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.242081] (ydlidar_sdk) StderrLine: {'line': b'  147 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[42.242886] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[42.244343] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.245154] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.245989] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[42.246757] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/./core/base/thread.h:151:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.247815] (ydlidar_sdk) StderrLine: {'line': b'  151 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[42.261011] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[42.262050] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.263331] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.264721] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[42.337351] (-) TimerEvent: {}
[42.438531] (-) TimerEvent: {}
[42.457555] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/scl_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[42.458593] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/scl_test.cpp:333:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.459423] (ydlidar_sdk) StderrLine: {'line': b'  333 |       printf("Scan received [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points stamp [%llu]\\n",\n'}
[42.460389] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[42.461253] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[42.462064] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[42.462867] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[42.463765] (ydlidar_sdk) StderrLine: {'line': b'  334 |              \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[42.464645] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K  \n'}
[42.465474] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.466305] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.467128] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/scl_test.cpp:333:53:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[Kuint64_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.467935] (ydlidar_sdk) StderrLine: {'line': b'  333 |       printf("Scan received [%llu] points stamp [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K]\\n",\n'}
[42.481035] (ydlidar_sdk) StderrLine: {'line': b'      |                                                  \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[42.481881] (ydlidar_sdk) StderrLine: {'line': b'      |                                                     \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[42.482706] (ydlidar_sdk) StderrLine: {'line': b'      |                                                     \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[42.483540] (ydlidar_sdk) StderrLine: {'line': b'      |                                                  \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[42.484375] (ydlidar_sdk) StderrLine: {'line': b'  334 |              scan.points.size(),\n'}
[42.485215] (ydlidar_sdk) StderrLine: {'line': b'  335 |              \x1b[32m\x1b[Kscan.stamp\x1b[m\x1b[K);\n'}
[42.485984] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~\x1b[m\x1b[K                              \n'}
[42.486746] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.487470] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Kuint64_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.538799] (-) TimerEvent: {}
[42.639936] (-) TimerEvent: {}
[42.741102] (-) TimerEvent: {}
[42.842244] (-) TimerEvent: {}
[42.851608] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tea_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[42.853208] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ubuntu/robot_ws/src/YDLidar-SDK/samples/tea_test.cpp:211:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[42.854682] (ydlidar_sdk) StderrLine: {'line': b'  211 |       fprintf(stdout, "Scan received [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points is [%f]s\\n",\n'}
[42.856194] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[42.857642] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[42.858945] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[42.860373] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[42.861792] (ydlidar_sdk) StderrLine: {'line': b'  212 |               \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[42.863111] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K          \n'}
[42.864449] (ydlidar_sdk) StderrLine: {'line': b'      |                               \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[42.876846] (ydlidar_sdk) StderrLine: {'line': b'      |                               \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[42.942510] (-) TimerEvent: {}
[43.043644] (-) TimerEvent: {}
[43.144728] (-) TimerEvent: {}
[43.245874] (-) TimerEvent: {}
[43.346966] (-) TimerEvent: {}
[43.447979] (-) TimerEvent: {}
[43.549159] (-) TimerEvent: {}
[43.601333] (ydlidar_sdk) StdoutLine: {'line': b'[ 97%] \x1b[32m\x1b[1mLinking CXX executable ../scl_test\x1b[0m\n'}
[43.649423] (-) TimerEvent: {}
[43.750634] (-) TimerEvent: {}
[43.792550] (ydlidar_sdk) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable ../tea_test\x1b[0m\n'}
[43.850971] (-) TimerEvent: {}
[43.952348] (-) TimerEvent: {}
[44.053387] (-) TimerEvent: {}
[44.154708] (-) TimerEvent: {}
[44.255952] (-) TimerEvent: {}
[44.321700] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target scl_test\n'}
[44.356239] (-) TimerEvent: {}
[44.456364] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target tea_test\n'}
[44.457150] (-) TimerEvent: {}
[44.515233] (ydlidar_sdk) CommandEnded: {'returncode': 0}
[44.557400] (-) TimerEvent: {}
[44.658891] (-) TimerEvent: {}
[44.760356] (-) TimerEvent: {}
[44.862295] (-) TimerEvent: {}
[44.898449] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'install'}
[44.947927] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ubuntu/robot_ws/build/ydlidar_sdk'], 'cwd': '/home/ubuntu/robot_ws/build/ydlidar_sdk', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ubuntu'), ('SSH_AGENT_PID', '1914'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ubuntu'), ('OLDPWD', '/home/ubuntu'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1648'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ubuntu'), ('JOURNAL_STREAM', '9:37231'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ubuntu'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu:@/tmp/.ICE-unix/2263,unix/ubuntu:/tmp/.ICE-unix/2263'), ('INVOCATION_ID', '07c1802c0aa34cad91a341208710bc27'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/14b98bcc_90b3_485a_badd_f52529966b93'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.76'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ubuntu/robot_ws/build/ydlidar_sdk'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003')]), 'shell': False}
[44.963600] (-) TimerEvent: {}
[44.997814] (ydlidar_sdk) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[44.999229] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/datatype.h\n'}
[45.000798] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/locker.h\n'}
[45.001859] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/thread.h\n'}
[45.009285] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/timer.h\n'}
[45.013536] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/typedef.h\n'}
[45.014581] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/utils.h\n'}
[45.015326] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/v8stdint.h\n'}
[45.016459] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/base/ydlidar.h\n'}
[45.017257] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/common/ChannelDevice.h\n'}
[45.018293] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/common/DriverInterface.h\n'}
[45.019390] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/common/ydlidar_datatype.h\n'}
[45.020153] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/common/ydlidar_def.h\n'}
[45.021320] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/common/ydlidar_help.h\n'}
[45.022428] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/common/ydlidar_protocol.h\n'}
[45.023444] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/math/angles.h\n'}
[45.024444] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/network/ActiveSocket.h\n'}
[45.025976] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/network/PassiveSocket.h\n'}
[45.027416] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/network/SimpleSocket.h\n'}
[45.029156] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/network/StatTimer.h\n'}
[45.030873] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/serial/common.h\n'}
[45.032124] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/serial/serial.h\n'}
[45.034106] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/serial/impl/unix/lock.h\n'}
[45.035472] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/serial/impl/unix/unix.h\n'}
[45.036951] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/core/serial/impl/unix/unix_serial.h\n'}
[45.038688] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/CYdLidar.h\n'}
[45.040040] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/ETLidarDriver.h\n'}
[45.041503] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/GSLidarDriver.h\n'}
[45.043008] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/SDMLidarDriver.h\n'}
[45.044521] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/YDlidarDriver.h\n'}
[45.045913] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/ydlidar_sdk.h\n'}
[45.047613] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/filters/FilterInterface.h\n'}
[45.048954] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/filters/NoiseFilter.h\n'}
[45.050324] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/src/filters/StrongLightFilter.h\n'}
[45.051663] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/include/ydlidar_config.h\n'}
[45.053347] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/lib/libydlidar_sdk.a\n'}
[45.063865] (-) TimerEvent: {}
[45.069024] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/lib/pkgconfig/YDLIDAR_SDK.pc\n'}
[45.070643] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkConfig.cmake\n'}
[45.071830] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkTargets.cmake\n'}
[45.072876] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkConfigVersion.cmake\n'}
[45.074492] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/FindYDLIDAR_SDK.cmake\n'}
[45.076905] (ydlidar_sdk) StdoutLine: {'line': b'-- Up-to-date: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK\n'}
[45.078034] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/install_package.cmake\n'}
[45.079089] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/cmake_uninstall.cmake.in\n'}
[45.080319] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/FindPackage.cmake.in\n'}
[45.081396] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/PkgConfig.pc.in\n'}
[45.082300] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/PackageConfig.cmake.in\n'}
[45.083172] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/PackageConfigVersion.cmake.in\n'}
[45.084286] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/script_show_final_summary.cmake\n'}
[45.085211] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/common\n'}
[45.086332] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/common/ydlidar_base.cmake\n'}
[45.087124] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/common/ydlidar_parse.cmake\n'}
[45.088151] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/LICENSE.txt\n'}
[45.089174] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/README.md\n'}
[45.090432] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc\n'}
[45.095141] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs\n'}
[45.096153] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Software_FAQs.md\n'}
[45.097042] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/General_FAQs.md\n'}
[45.098051] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Hardware_FAQs.md\n'}
[45.099014] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/README.md\n'}
[45.100004] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Software_FAQs_cn.md\n'}
[45.101134] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/General_FAQs_cn.md\n'}
[45.101846] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Hardware_FAQs_cn.md\n'}
[45.102499] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar_SDK_Communication_Protocol.pdf\n'}
[45.112870] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials\n'}
[45.113957] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_python.md\n'}
[45.114717] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/examine_the_simple_lidar_tutorial.md\n'}
[45.115724] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_network_adapter_tutorial_c++.md\n'}
[45.116933] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_c.md\n'}
[45.118171] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_c++.md\n'}
[45.119377] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Diagram.md\n'}
[45.120098] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLIDAR_SDK_API_for_Developers.md\n'}
[45.121133] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Dataset.md\n'}
[45.122532] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/README.md\n'}
[45.123604] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.html\n'}
[45.124891] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.md\n'}
[45.126135] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto\n'}
[45.127054] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_udev_rules.md\n'}
[45.128017] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_build_and_install.md\n'}
[45.129115] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_gerenrate_vs_project_by_cmake.md\n'}
[45.130207] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_build_and_debug_using_vscode.md\n'}
[45.131269] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/README.md\n'}
[45.132020] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_csharp_project.md\n'}
[45.133088] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images\n'}
[45.133835] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_running.png\n'}
[45.134868] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/cpack.png\n'}
[45.135648] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_exception.png\n'}
[45.136751] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ttyUSB1.png\n'}
[45.137748] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ydlidar_lidar_monitor.png\n'}
[45.140412] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ttyUSB0.png\n'}
[45.141772] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_build.png\n'}
[45.143197] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_project.png\n'}
[45.144647] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sequence.png\n'}
[45.146046] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_library.png\n'}
[45.147268] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode\n'}
[45.148389] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode/run_tasks.jpg\n'}
[45.154691] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode/tasks.png\n'}
[45.160496] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sdk_init.png\n'}
[45.161617] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sdk_scanning.png\n'}
[45.163159] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_solve_slow_pull_from_cn.md\n'}
[45.163998] (-) TimerEvent: {}
[45.165839] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_pull.md\n'}
[45.166724] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.pdf\n'}
[45.168966] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/SDK.pdf\n'}
[45.181197] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images\n'}
[45.182477] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_architecture.png\n'}
[45.183562] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/frame_intensity.png\n'}
[45.184755] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/FlowChart.png\n'}
[45.186185] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/frame.png\n'}
[45.187753] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/communication_mechanism.png\n'}
[45.189510] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/YDLidar.jpg\n'}
[45.190649] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sequence.png\n'}
[45.195010] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/system_workflow.png\n'}
[45.196137] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/angle_q2.png\n'}
[45.197042] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/EAI.png\n'}
[45.199830] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/YDLidar.png\n'}
[45.201385] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_init.png\n'}
[45.202563] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_scanning.png\n'}
[45.213171] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Tutorials.md\n'}
[45.214020] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart\n'}
[45.214723] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart/ydlidar_sdk_software_installation_guide.md\n'}
[45.215431] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart/README.md\n'}
[45.216253] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/startup/initenv.sh\n'}
[45.219290] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/et_test\n'}
[45.225326] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/gs_ota\n'}
[45.231345] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/gs_test\n'}
[45.237391] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/scl_test\n'}
[45.243921] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/sdm_test\n'}
[45.250125] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/tea_test\n'}
[45.256441] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/tmini_test\n'}
[45.262635] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/tof_test\n'}
[45.264040] (-) TimerEvent: {}
[45.269913] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/tri_and_gs_test\n'}
[45.277929] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/tri_restart\n'}
[45.283881] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/tri_test\n'}
[45.290685] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_sdk/bin/lidar_c_api_test\n'}
[45.315996] (ydlidar_sdk) CommandEnded: {'returncode': 0}
[45.366705] (-) TimerEvent: {}
[45.471319] (-) TimerEvent: {}
[45.574807] (-) TimerEvent: {}
[45.677770] (-) TimerEvent: {}
[45.780488] (-) TimerEvent: {}
[45.887127] (-) TimerEvent: {}
[45.992888] (-) TimerEvent: {}
[46.096418] (-) TimerEvent: {}
[46.198196] (-) TimerEvent: {}
[46.302442] (-) TimerEvent: {}
[46.406820] (-) TimerEvent: {}
[46.510727] (-) TimerEvent: {}
[46.614222] (-) TimerEvent: {}
[46.718388] (-) TimerEvent: {}
[46.824806] (-) TimerEvent: {}
[46.928734] (-) TimerEvent: {}
[47.032824] (-) TimerEvent: {}
[47.135922] (-) TimerEvent: {}
[47.144569] (ydlidar_sdk) JobEnded: {'identifier': 'ydlidar_sdk', 'rc': 0}
[47.236271] (-) TimerEvent: {}
[47.337122] (-) TimerEvent: {}
[47.438053] (-) TimerEvent: {}
[47.538990] (-) TimerEvent: {}
[47.639908] (-) TimerEvent: {}
[47.741377] (-) TimerEvent: {}
[47.842428] (-) TimerEvent: {}
[47.854727] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 75%] \x1b[32m\x1b[1mLinking CXX executable ydlidar_ros2_driver_node\x1b[0m\n'}
[47.942843] (-) TimerEvent: {}
[48.044230] (-) TimerEvent: {}
[48.145055] (-) TimerEvent: {}
[48.246107] (-) TimerEvent: {}
[48.346900] (-) TimerEvent: {}
[48.447891] (-) TimerEvent: {}
[48.549602] (-) TimerEvent: {}
[48.650834] (-) TimerEvent: {}
[48.752375] (-) TimerEvent: {}
[48.853609] (-) TimerEvent: {}
[48.954700] (-) TimerEvent: {}
[49.055638] (-) TimerEvent: {}
[49.156878] (-) TimerEvent: {}
[49.257871] (-) TimerEvent: {}
[49.355526] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 75%] Built target ydlidar_ros2_driver_node\n'}
[49.358084] (-) TimerEvent: {}
[49.458962] (-) TimerEvent: {}
[49.559729] (-) TimerEvent: {}
[49.660469] (-) TimerEvent: {}
[49.761201] (-) TimerEvent: {}
[49.861963] (-) TimerEvent: {}
[49.962762] (-) TimerEvent: {}
[50.063577] (-) TimerEvent: {}
[50.164344] (-) TimerEvent: {}
[50.265114] (-) TimerEvent: {}
[50.365892] (-) TimerEvent: {}
[50.466750] (-) TimerEvent: {}
[50.567519] (-) TimerEvent: {}
[50.668293] (-) TimerEvent: {}
[50.769042] (-) TimerEvent: {}
[50.869790] (-) TimerEvent: {}
[50.970554] (-) TimerEvent: {}
[51.071358] (-) TimerEvent: {}
[51.172143] (-) TimerEvent: {}
[51.272967] (-) TimerEvent: {}
[51.373752] (-) TimerEvent: {}
[51.474558] (-) TimerEvent: {}
[51.575399] (-) TimerEvent: {}
[51.676209] (-) TimerEvent: {}
[51.776977] (-) TimerEvent: {}
[51.877714] (-) TimerEvent: {}
[51.978480] (-) TimerEvent: {}
[52.079386] (-) TimerEvent: {}
[52.180121] (-) TimerEvent: {}
[52.280886] (-) TimerEvent: {}
[52.381654] (-) TimerEvent: {}
[52.482467] (-) TimerEvent: {}
[52.583804] (-) TimerEvent: {}
[52.685094] (-) TimerEvent: {}
[52.785813] (-) TimerEvent: {}
[52.886584] (-) TimerEvent: {}
[52.987424] (-) TimerEvent: {}
[53.088250] (-) TimerEvent: {}
[53.189600] (-) TimerEvent: {}
[53.290954] (-) TimerEvent: {}
[53.391757] (-) TimerEvent: {}
[53.492644] (-) TimerEvent: {}
[53.593635] (-) TimerEvent: {}
[53.694700] (-) TimerEvent: {}
[53.795520] (-) TimerEvent: {}
[53.798750] (ydlidar_ros2_driver) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable ydlidar_ros2_driver_client\x1b[0m\n'}
[53.895734] (-) TimerEvent: {}
[53.996512] (-) TimerEvent: {}
[54.097303] (-) TimerEvent: {}
[54.198366] (-) TimerEvent: {}
[54.299326] (-) TimerEvent: {}
[54.400282] (-) TimerEvent: {}
[54.501176] (-) TimerEvent: {}
[54.602100] (-) TimerEvent: {}
[54.702781] (-) TimerEvent: {}
[54.803548] (-) TimerEvent: {}
[54.904808] (-) TimerEvent: {}
[54.981987] (ydlidar_ros2_driver) StdoutLine: {'line': b'[100%] Built target ydlidar_ros2_driver_client\n'}
[55.005052] (-) TimerEvent: {}
[55.023651] (ydlidar_ros2_driver) CommandEnded: {'returncode': 0}
[55.105304] (-) TimerEvent: {}
[55.163333] (ydlidar_ros2_driver) JobProgress: {'identifier': 'ydlidar_ros2_driver', 'progress': 'install'}
[55.164707] (ydlidar_ros2_driver) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver'], 'cwd': '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ubuntu'), ('SSH_AGENT_PID', '1914'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ubuntu'), ('OLDPWD', '/home/ubuntu'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1648'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ubuntu'), ('JOURNAL_STREAM', '9:37231'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ubuntu'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu:@/tmp/.ICE-unix/2263,unix/ubuntu:/tmp/.ICE-unix/2263'), ('INVOCATION_ID', '07c1802c0aa34cad91a341208710bc27'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/14b98bcc_90b3_485a_badd_f52529966b93'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.76'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ubuntu/robot_ws/build/ydlidar_ros2_driver'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[55.205517] (-) TimerEvent: {}
[55.208234] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[55.209053] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/lib/ydlidar_ros2_driver/ydlidar_ros2_driver_node\n'}
[55.219201] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Set runtime path of "/home/ubuntu/robot_ws/install/ydlidar_ros2_driver/lib/ydlidar_ros2_driver/ydlidar_ros2_driver_node" to ""\n'}
[55.219805] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/lib/ydlidar_ros2_driver/ydlidar_ros2_driver_client\n'}
[55.231287] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Set runtime path of "/home/ubuntu/robot_ws/install/ydlidar_ros2_driver/lib/ydlidar_ros2_driver/ydlidar_ros2_driver_client" to ""\n'}
[55.231878] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/launch\n'}
[55.232362] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/launch/ydlidar_launch_view.py\n'}
[55.233700] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/launch/ydlidar_launch.py\n'}
[55.234494] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/launch/ydlidar.py\n'}
[55.234996] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params\n'}
[55.235378] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/G2.yaml\n'}
[55.236225] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/X4.yaml\n'}
[55.237061] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/G1.yaml\n'}
[55.238841] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/TG.yaml\n'}
[55.240901] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/X2.yaml\n'}
[55.242578] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/G6.yaml\n'}
[55.243091] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/TminiPro.yaml\n'}
[55.243625] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/X4-Pro.yaml\n'}
[55.244012] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/ydlidar.yaml\n'}
[55.244725] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/startup\n'}
[55.245252] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/startup/initenv.sh\n'}
[55.245976] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/config\n'}
[55.246463] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/config/ydlidar.rviz\n'}
[55.247893] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ament_index/resource_index/package_run_dependencies/ydlidar_ros2_driver\n'}
[55.249321] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ament_index/resource_index/parent_prefix_path/ydlidar_ros2_driver\n'}
[55.250637] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/ament_prefix_path.sh\n'}
[55.251634] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/ament_prefix_path.dsv\n'}
[55.252749] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/path.sh\n'}
[55.253700] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/path.dsv\n'}
[55.254650] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.bash\n'}
[55.255665] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.sh\n'}
[55.256735] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.zsh\n'}
[55.257669] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.dsv\n'}
[55.258622] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/package.dsv\n'}
[55.259805] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ament_index/resource_index/packages/ydlidar_ros2_driver\n'}
[55.261095] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/cmake/ydlidar_ros2_driverConfig.cmake\n'}
[55.261982] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/cmake/ydlidar_ros2_driverConfig-version.cmake\n'}
[55.262995] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Installing: /home/ubuntu/robot_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/package.xml\n'}
[55.268523] (ydlidar_ros2_driver) CommandEnded: {'returncode': 0}
[55.306018] (-) TimerEvent: {}
[55.407383] (-) TimerEvent: {}
[55.509288] (-) TimerEvent: {}
[55.610391] (-) TimerEvent: {}
[55.712120] (-) TimerEvent: {}
[55.813631] (-) TimerEvent: {}
[55.914720] (-) TimerEvent: {}
[56.015783] (-) TimerEvent: {}
[56.120487] (-) TimerEvent: {}
[56.221286] (-) TimerEvent: {}
[56.322826] (-) TimerEvent: {}
[56.424683] (-) TimerEvent: {}
[56.526901] (-) TimerEvent: {}
[56.626556] (ydlidar_ros2_driver) JobEnded: {'identifier': 'ydlidar_ros2_driver', 'rc': 0}
[56.629593] (-) TimerEvent: {}
[56.629902] (-) EventReactorShutdown: {}
